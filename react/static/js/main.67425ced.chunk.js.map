{"version":3,"sources":["components/TodoList.js","components/TodoFilter.js","App.js","index.js"],"names":["TodoList","props","state","mode","deleteItem","bind","completeItem","id","this","changeValMode","deleteOneById","completeOneById","data","type","filter","item","isCompleted","console","log","result","showResulData","className","map","key","class","onClick","checked","onDoubleClick","changeInputMode","name","style","display","value","onChange","e","editItemById","target","onBlur","fnishEdit","React","Component","TodoFilter","onSetFilterType","setState","todoCount","forEach","v","clearComplete","App","useState","setData","text","setInputChange","setFilterType","useEffect","a","axios","onSubmit","event","preventDefault","newItem","length","concat","handleSubmit","placeholder","autoFocus","index","val","htmlFor","deleteIndex","findIndex","splice","ReactDOM","render","document","getElementById"],"mappings":"6VAuFeA,E,YApFb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,KAAM,UAER,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANH,E,6EAQHE,EAAIJ,GAClBK,KAAKP,MAAMQ,cAAcF,EAAIJ,K,iCAEpBI,GACTC,KAAKP,MAAMS,cAAcH,K,mCAEdA,GACXC,KAAKP,MAAMU,gBAAgBJ,K,oCAGfK,EAAMC,GAClB,MAAa,WAATA,EACKD,EAAKE,QAAO,SAAAC,GACjB,OAA4B,IAArBA,EAAKC,eAGH,cAATH,EACKD,EAAKE,QAAO,SAAAC,GACjB,OAA4B,IAArBA,EAAKC,eAGTJ,I,+BAEC,IAAD,OACPK,QAAQC,IAAI,UADL,MAEgBV,KAAKP,MAApBW,EAFD,EAECA,KAAMC,EAFP,EAEOA,KAERM,GADWX,KAAKN,MAAdC,KACOK,KAAKY,cAAcR,EAAMC,IAExC,OACE,wBAAIQ,UAAU,aACXF,EAAOG,KAAI,SAAAP,GAAI,OACd,wBACEM,WAAgC,IAArBN,EAAKC,YAAuB,YAAc,GACrDO,IAAKR,EAAKR,IAEI,UAAbQ,EAAKZ,KACJ,yBAAKqB,MAAM,QACT,2BACEC,QAAS,EAAKnB,aAAaD,KAAK,EAAMU,EAAKR,IAC3Cc,UAAU,SACVR,KAAK,WACLa,QAASX,EAAKC,YAAc,UAAY,KAE1C,2BACEW,cAAe,kBAAM,EAAKC,gBAAgBb,EAAKR,GAAIQ,EAAKZ,QAEvDY,EAAKc,MAER,4BACER,UAAU,UACVI,QAAS,EAAKrB,WAAWC,KAAK,EAAMU,EAAKR,OAI7C,GAGY,UAAbQ,EAAKZ,KACJ,2BACEkB,UAAU,OACVS,MAAO,CAAEC,QAAS,SAClBC,MAAOjB,EAAKc,KACZI,SAAU,SAAAC,GAAC,OAAI,EAAKjC,MAAMkC,aAAapB,EAAKR,GAAI2B,EAAEE,OAAOJ,QACzDK,OAAQ,kBAAM,EAAKpC,MAAMqC,UAAUvB,EAAKR,OAG1C,Y,GA5ESgC,IAAMC,WCoEdC,E,YAnEb,WAAYxC,GAAQ,IAAD,8BACjB,4CAAMA,KAKRyC,gBAAkB,SAAA7B,GAChB,EAAK8B,SACH,CACE9B,KAAMA,IAER,WACE,EAAKZ,MAAMwC,WAAW5B,OAV1B,EAAKX,MAAQ,CACXW,KAAM,OAHS,E,sEAgBT,IAAD,OACCA,EAASL,KAAKN,MAAdW,KAEAD,EAASJ,KAAKP,MAAdW,KACJgC,EAAY,EAKhB,OAJAhC,EAAKiC,SAAQ,SAAAC,GACX,OAAyB,IAAlBA,EAAE9B,YAAyB4B,GAAa,EAAK,MAIpD,4BAAQvB,UAAU,UAChB,0BAAMA,UAAU,cACd,gCAASuB,GADX,cAGA,wBAAIvB,UAAU,WACZ,4BACE,uBACEA,UAAoB,QAATR,EAAiB,WAAa,GACzCY,QAAS,kBAAM,EAAKiB,gBAAgB,SAFtC,QAOF,4BACE,uBACErB,UAAoB,WAATR,EAAoB,WAAa,GAC5CY,QAAS,kBAAM,EAAKiB,gBAAgB,YAFtC,WAOF,4BACE,uBACErB,UAAoB,cAATR,EAAuB,WAAa,GAC/CY,QAAS,kBAAM,EAAKiB,gBAAgB,eAFtC,eAQJ,4BACErB,UAAU,kBACVI,QAAS,kBAAM,EAAKxB,MAAM8C,kBAF5B,wB,GAzDiBR,IAAMC,W,iBCgKhBQ,MA3Jf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNrC,EADM,KACAsC,EADA,OAEkBD,mBAAS,IAF3B,mBAENE,EAFM,KAEAC,EAFA,OAGiBH,mBAAS,OAH1B,mBAGNpC,EAHM,KAGAwC,EAHA,KAiHb,OA7GAC,oBAAS,sBAAC,4BAAAC,EAAA,sEACaC,IACnB,yDAFM,QACFrC,EADE,QAIDP,KAAKiC,SAAQ,SAAAC,GAClBA,EAAE3C,KAAO,YAEX+C,EAAQ/B,EAAOP,MAPP,2CAQP,IAsGD,yBAAKS,UAAU,WACb,4BAAQA,UAAU,UAChB,qCACA,0BAAMoC,SAAU,SAAAvB,GAAC,OAvGvB,SAAsBwB,GAEpB,GADAA,EAAMC,iBACDR,EAAL,CAGA,IAAMS,EAAU,CACd/B,KAAMsB,EACNnC,aAAa,EACbT,GAAIK,EAAKA,EAAKiD,OAAS,GAAGtD,GAAK,GAGjC2C,EAAQtC,EAAKkD,OAAOF,IACpBR,EAAe,KA2FUW,CAAa7B,KAChC,2BACEb,UAAU,WACV2C,YAAY,yBACZC,WAAS,EACTjC,MAAOmB,EACPlB,SAAU,SAAAC,GAAC,OAAIkB,EAAelB,EAAEE,OAAOJ,WAG3C,6BAASX,UAAU,QACjB,2BACEd,GAAG,aACHc,UAAU,aACVR,KAAK,WACLY,QArEV,WACEb,EAAKiC,SAAQ,SAAS9B,EAAMmD,GAC1B,OAA4B,IAArBnD,EAAKC,YAAyBD,EAAKC,aAAc,EAAQ,MAElEkC,EACEtC,EAAKE,QAAO,SAASqD,GACnB,OAAOA,SAiEL,2BAAOC,QAAQ,cAAf,wBACA,kBAAC,EAAD,CACEvD,KAAMA,EACND,KAAMA,EACNF,cA5GV,SAAmBH,GACjB,IAAI8D,EAAczD,EAAK0D,WAAU,SAAAxB,GAAC,OAAIA,EAAEvC,KAAOA,KAC/CK,EAAK2D,OAAOF,EAAa,GAEzBnB,EACEtC,EAAKE,QAAO,SAASqD,GACnB,OAAOA,EAAI5D,IAAMA,OAuGbI,gBAlGV,SAAqBJ,GACnBK,EAAKiC,SAAQ,SAAS9B,EAAMmD,GAC1B,OAAOnD,EAAKR,KAAOA,EAAMQ,EAAKC,aAAeD,EAAKC,YAAe,MAEnEkC,EACEtC,EAAKE,QAAO,SAASqD,GACnB,OAAOA,OA6FH1D,cAlEV,SAAuBF,EAAIJ,GACzBc,QAAQC,IAAIX,EAAIJ,GAChBS,EAAKiC,SAAQ,SAAS9B,EAAMmD,GAC1B,OAAOnD,EAAKR,KAAOA,EAAMQ,EAAKZ,KAAO,SAAY,MAEnD+C,EACEtC,EAAKE,QAAO,SAASqD,GACnB,OAAOA,MAGXlD,QAAQC,IAAIN,IAyDJuB,aAtDV,SAAsB5B,EAAI4D,GACxBlD,QAAQC,IAAI,OAAQiD,GAEpBvD,EAAKiC,SAAQ,SAAS9B,EAAMmD,GAC1B,OAAOnD,EAAKR,KAAOA,EAAMQ,EAAKc,KAAOsC,EAAO,MAE9CjB,EACEtC,EAAKE,QAAO,SAASqD,GACnB,OAAOA,MAGXlD,QAAQC,IAAIN,IA4CJ0B,UAzCV,SAAmB/B,GACjBU,QAAQC,IAAI,uCAAUX,GAEtBK,EAAKiC,SAAQ,SAAS9B,EAAMmD,GAC1B,OAAOnD,EAAKR,KAAOA,EAAMQ,EAAKZ,KAAO,SAAY,MAEnD+C,EACEtC,EAAKE,QAAO,SAASqD,GACnB,OAAOA,WAsCT,kBAAC,EAAD,CACEvD,KAAMA,EACN6B,WAjGN,SAA0B5B,GACxBwC,EAAcxC,IAiGVkC,cA/FN,WACEG,EACEtC,EAAKE,QAAO,SAASC,GACnB,OAA4B,IAArBA,EAAKC,qB,MC3DpBwD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.67425ced.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass TodoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: 'onShow'\r\n    };\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.completeItem = this.completeItem.bind(this);\r\n  }\r\n  changeInputMode(id, mode) {\r\n    this.props.changeValMode(id, mode);\r\n  }\r\n  deleteItem(id) {\r\n    this.props.deleteOneById(id);\r\n  }\r\n  completeItem(id) {\r\n    this.props.completeOneById(id);\r\n  }\r\n\r\n  showResulData(data, type) {\r\n    if (type === 'active') {\r\n      return data.filter(item => {\r\n        return item.isCompleted === false;\r\n      });\r\n    }\r\n    if (type === 'completed') {\r\n      return data.filter(item => {\r\n        return item.isCompleted === true;\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n  render() {\r\n    console.log('render');\r\n    const { data, type } = this.props;\r\n    const { mode } = this.state;\r\n    const result = this.showResulData(data, type);\r\n\r\n    return (\r\n      <ul className=\"todo-list\">\r\n        {result.map(item => (\r\n          <li\r\n            className={item.isCompleted === true ? 'completed' : ''}\r\n            key={item.id}\r\n          >\r\n            {item.mode == 'onShow' ? (\r\n              <div class=\"view\">\r\n                <input\r\n                  onClick={this.completeItem.bind(this, item.id)}\r\n                  className=\"toggle\"\r\n                  type=\"checkbox\"\r\n                  checked={item.isCompleted ? 'checked' : ''}\r\n                />\r\n                <label\r\n                  onDoubleClick={() => this.changeInputMode(item.id, item.mode)}\r\n                >\r\n                  {item.name}\r\n                </label>\r\n                <button\r\n                  className=\"destroy\"\r\n                  onClick={this.deleteItem.bind(this, item.id)}\r\n                ></button>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            {item.mode == 'onEdit' ? (\r\n              <input\r\n                className=\"edit\"\r\n                style={{ display: 'block' }}\r\n                value={item.name}\r\n                onChange={e => this.props.editItemById(item.id, e.target.value)}\r\n                onBlur={() => this.props.fnishEdit(item.id)}\r\n              />\r\n            ) : (\r\n              ''\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nclass TodoFilter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      type: 'all'\r\n    };\r\n  }\r\n  onSetFilterType = type => {\r\n    this.setState(\r\n      {\r\n        type: type\r\n      },\r\n      () => {\r\n        this.props.TodoFilter(type);\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    const { type } = this.state;\r\n    // todo 数量\r\n    const { data } = this.props;\r\n    let todoCount = 0;\r\n    data.forEach(v => {\r\n      return v.isCompleted === false ? (todoCount += 1) : '';\r\n    });\r\n\r\n    return (\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">\r\n          <strong>{todoCount}</strong> item left\r\n        </span>\r\n        <ul className=\"filters\">\r\n          <li>\r\n            <a\r\n              className={type === 'all' ? 'selected' : ''}\r\n              onClick={() => this.onSetFilterType('all')}\r\n            >\r\n              All\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              className={type === 'active' ? 'selected' : ''}\r\n              onClick={() => this.onSetFilterType('active')}\r\n            >\r\n              Active\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a\r\n              className={type === 'completed' ? 'selected' : ''}\r\n              onClick={() => this.onSetFilterType('completed')}\r\n            >\r\n              Completed\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <button\r\n          className=\"clear-completed\"\r\n          onClick={() => this.props.clearComplete()}\r\n        >\r\n          Clear completed\r\n        </button>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoFilter;\r\n","import React, { useState, useEffect } from 'react';\nimport './static/base.css';\nimport './static/index.css';\nimport TodoList from './components/TodoList';\nimport TodoFilter from './components/TodoFilter';\nimport axios from 'axios';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [text, setInputChange] = useState('');\n  const [type, setFilterType] = useState('all');\n  useEffect(async () => {\n    const result = await axios(\n      'https://xiaoyueyue.org/todomvc-demos/static/data.json'\n    );\n    result.data.forEach(v => {\n      v.mode = 'onShow';\n    });\n    setData(result.data);\n  }, []);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!text) {\n      return;\n    }\n    const newItem = {\n      name: text,\n      isCompleted: false,\n      id: data[data.length - 1].id + 1\n    };\n\n    setData(data.concat(newItem));\n    setInputChange('');\n  }\n\n  function deleteOne(id) {\n    let deleteIndex = data.findIndex(v => v.id === id);\n    data.splice(deleteIndex, 1);\n    // setData(data) 异步方法必须传递函数\n    setData(\n      data.filter(function(val) {\n        return val.id != id;\n      })\n    );\n  }\n\n  function completeOne(id) {\n    data.forEach(function(item, index) {\n      return item.id === id ? (item.isCompleted = !item.isCompleted) : '';\n    });\n    setData(\n      data.filter(function(val) {\n        return val;\n      })\n    );\n  }\n\n  function onFilterTodoList(type) {\n    setFilterType(type);\n  }\n  function completedClearn() {\n    setData(\n      data.filter(function(item) {\n        return item.isCompleted === false;\n      })\n    );\n  }\n  // 批量更改\n  function doAllCompleted() {\n    data.forEach(function(item, index) {\n      return item.isCompleted === false ? (item.isCompleted = true) : '';\n    });\n    setData(\n      data.filter(function(val) {\n        return val;\n      })\n    );\n  }\n  // 编辑状态切换\n  function changeValMode(id, mode) {\n    console.log(id, mode);\n    data.forEach(function(item, index) {\n      return item.id === id ? (item.mode = 'onEdit') : '';\n    });\n    setData(\n      data.filter(function(val) {\n        return val;\n      })\n    );\n    console.log(data);\n  }\n  // 编辑模式\n  function editItemById(id, val) {\n    console.log('edit', val);\n\n    data.forEach(function(item, index) {\n      return item.id === id ? (item.name = val) : '';\n    });\n    setData(\n      data.filter(function(val) {\n        return val;\n      })\n    );\n    console.log(data);\n  }\n  // 编辑结束\n  function fnishEdit(id) {\n    console.log('编辑结束设置', id);\n\n    data.forEach(function(item, index) {\n      return item.id === id ? (item.mode = 'onShow') : '';\n    });\n    setData(\n      data.filter(function(val) {\n        return val;\n      })\n    );\n  }\n\n  return (\n    <div className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={e => handleSubmit(e)}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            autoFocus\n            value={text}\n            onChange={e => setInputChange(e.target.value)}\n          />\n        </form>\n        <section className=\"main\">\n          <input\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            onClick={doAllCompleted}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            type={type}\n            data={data}\n            deleteOneById={deleteOne}\n            completeOneById={completeOne}\n            changeValMode={changeValMode}\n            editItemById={editItemById}\n            fnishEdit={fnishEdit}\n          />\n        </section>\n      </header>\n\n      <TodoFilter\n        data={data}\n        TodoFilter={onFilterTodoList}\n        clearComplete={completedClearn}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}